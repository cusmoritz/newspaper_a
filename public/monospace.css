/* 
Monospace concept via Oskar Wickström
https://owickstrom.github.io/the-monospace-web/
MIT License 
*/

@import url('https://fonts.cdnfonts.com/css/jetbrains-mono-2');

:root {
    /* --text-color: #000;
    --text-color-alt: #666;
    --background-color: #fff;
    --background-color-alt: #eee; */
    --text-color: #fff;
    --text-color-alt: #aaa;
    --background-color: #000;
    --background-color-alt: #111;

    --font-family: "JetBrains Mono", monospace;
    --line-height: 1.20rem;
    --border-thickness: 2px;
    font-family: var(--font-family);
    font-optical-sizing: auto;
    font-weight: var(--font-weight-normal);
    font-style: normal;
    font-variant-numeric: tabular-nums lining-nums;
    font-size: 16px;
}

/* @media (prefers-color-scheme: dark) {
    :root {
        --text-color: #fff;
        --text-color-alt: #aaa;
        --background-color: #000;
        --background-color-alt: #111;
    }
} */

* {
    box-sizing: border-box;
}

html {
    display: flex;
    width: 100%;
    margin: 0;
    padding: 0;
    flex-direction: column;
    align-items: center;
    background: var(--background-color);
    color: var(--text-color);
}

body {
    position: relative;
    width: 100%;
    margin: 0;
    padding: var(--line-height) 2ch;
    max-width: calc(min(100ch, round(down, 100%, 1ch)));
    line-height: var(--line-height);
    overflow-x: hidden;
}

h1, h2, h3, h4, h5, h6 {
    font-weight: var(--font-weight-bold);
    margin: calc(var(--line-height) * 2) 0 var(--line-height);
    line-height: var(--line-height);
}

img, video {
  display: block;
  width: 100%;
  object-fit: contain;
  overflow: hidden;
}

table {
    position: relative;
    top: calc(var(--line-height) / 2);
    width: calc(round(down, 100%, 1ch));
    border-collapse: collapse;
    margin: 0 0 calc(var(--line-height) * 2);
}

th, td {
    border: var(--border-thickness) solid var(--text-color);
    padding: 
      calc((var(--line-height) / 2))
      calc(1ch - var(--border-thickness) / 2)
      calc((var(--line-height) / 2) - (var(--border-thickness)))
    ;
    line-height: var(--line-height);
    vertical-align: top;
    text-align: left;
}
  table tbody tr:first-child > * {
    padding-top: calc((var(--line-height) / 2) - var(--border-thickness));
}

th > h1 {
  text-align: center;
}

.social-row > td > img {
  max-height: 25px;
}

fieldset {
  margin-top: 20px;
  border: var(--border-thickness) solid var(--text-color);
  font: inherit;
  font-weight: inherit;
  /* height: calc(var(--line-height) * 2); */
  width: auto;
  overflow: visible;
  background: var(--background-color);
  color: var(--text-color);
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
}

label {
  padding: calc(var(--line-height) * 2);
}

input, button, textarea, select {
    border: var(--border-thickness) solid var(--text-color);
    padding: 
      calc(var(--line-height) / 2 - var(--border-thickness))
      calc(1ch - var(--border-thickness));
    margin: 0;
    font: inherit;
    font-weight: inherit;
    height: calc(var(--line-height) * 2);
    width: auto;
    overflow: visible;
    background: var(--background-color);
    color: var(--text-color);
    line-height: normal;
    -webkit-font-smoothing: inherit;
    -moz-osx-font-smoothing: inherit;
    -webkit-appearance: none;
  }

  hr {
    position: relative;
    display: block;
    height: var(--line-height);
    margin: calc(var(--line-height) * 1.5) 0;
    border: none;
    color: var(--text-color);
  }

  hr:after {
    display: block;
    content: "";
    position: absolute;
    top: calc(var(--line-height) / 2 - var(--border-thickness));
    left: 0;
    width: 100%;
    border-top: calc(var(--border-thickness) * 3) double var(--text-color);
    height: 0;
  }

  a:link, a:visited {
    color: var(--text-color);
  }

  input[type=checkbox] {
    display: inline-grid;
    place-content: center;
    vertical-align: top;
    width: 2ch;
    height: var(--line-height);
    cursor: pointer;
  }
  input[type=checkbox]:checked:before {
    content: "";
    width: 1ch;
    height: calc(var(--line-height) / 2);
    background: var(--text-color);
  }
  input[type="date"]::-webkit-calendar-picker-indicator {
    color: var(--text-color);
    content: '▶';
  }

  .grid > * {
    --grid-cells: 1;
    display: flex;
    gap: 1ch;
    width: calc(round(down, 100%, (1ch * var(--grid-cells)) - (1ch * var(--grid-cells) - 1)));
    margin-bottom: var(--line-height);
  }

  /* home button */
  nav > .grid { 
      --grid-cells: 1;
      display: flex;
      gap: 1ch;
      width: calc(round(down, 100%, (1ch * var(--grid-cells)) - (1ch * var(--grid-cells) - 1)));
      margin-bottom: var(--line-height);
      border: var(--border-thickness) solid var(--text-color);
      padding-top: calc((var(--line-height) / 2) - var(--border-thickness));
      
  }

  nav > .grid {
    padding-left: 47%;
  }

td > details ::not [open] {
    background-color: red;
}

.create-story > * {
  margin-bottom: 10px;
}

.create-story > div {
  padding: 
  calc(var(--line-height) / 2 - var(--border-thickness))
  calc(1ch - var(--border-thickness));
}

.create-story > input,
.create-story > textarea {
  width: 70ch;
}

/* .create-story > textarea {
  min-height: 10ch;
} */



/* .grid:has(> :last-child:nth-child(1)) { --grid-cells: 1; }
.grid:has(> :last-child:nth-child(2)) { --grid-cells: 2; }
.grid:has(> :last-child:nth-child(3)) { --grid-cells: 3; }
.grid:has(> :last-child:nth-child(4)) { --grid-cells: 4; }
.grid:has(> :last-child:nth-child(5)) { --grid-cells: 5; }
.grid:has(> :last-child:nth-child(6)) { --grid-cells: 6; }
.grid:has(> :last-child:nth-child(7)) { --grid-cells: 7; }
.grid:has(> :last-child:nth-child(8)) { --grid-cells: 8; }
.grid:has(> :last-child:nth-child(9)) { --grid-cells: 9; } */




/* DEBUG UTILITIES */

.debug .debug-grid {
    --color: color-mix(in srgb, var(--text-color) 10%, var(--background-color) 90%);
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background-image:
      repeating-linear-gradient(var(--color) 0 1px, transparent 1px 100%),
      repeating-linear-gradient(90deg, var(--color) 0 1px, transparent 1px 100%);
    background-size: 1ch var(--line-height);
    margin: 0;
  }
  
  .debug .off-grid {
    background: rgba(255, 0, 0, 0.1);
  }
  
  .debug-toggle-label {
    text-align: right;
  }